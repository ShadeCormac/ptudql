#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ptudql_project
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLTN")]
	public partial class QLTNDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBoDeThi(BoDeThi instance);
    partial void UpdateBoDeThi(BoDeThi instance);
    partial void DeleteBoDeThi(BoDeThi instance);
    partial void InsertCauHoi(CauHoi instance);
    partial void UpdateCauHoi(CauHoi instance);
    partial void DeleteCauHoi(CauHoi instance);
    partial void InsertDanhSachThi(DanhSachThi instance);
    partial void UpdateDanhSachThi(DanhSachThi instance);
    partial void DeleteDanhSachThi(DanhSachThi instance);
    partial void InsertDeThi(DeThi instance);
    partial void UpdateDeThi(DeThi instance);
    partial void DeleteDeThi(DeThi instance);
    partial void InsertHocSinh(HocSinh instance);
    partial void UpdateHocSinh(HocSinh instance);
    partial void DeleteHocSinh(HocSinh instance);
    partial void InsertKyThi_DeThi(KyThi_DeThi instance);
    partial void UpdateKyThi_DeThi(KyThi_DeThi instance);
    partial void DeleteKyThi_DeThi(KyThi_DeThi instance);
    partial void InsertGiaoVien(GiaoVien instance);
    partial void UpdateGiaoVien(GiaoVien instance);
    partial void DeleteGiaoVien(GiaoVien instance);
    partial void InsertKyThi(KyThi instance);
    partial void UpdateKyThi(KyThi instance);
    partial void DeleteKyThi(KyThi instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    #endregion
		
		public QLTNDataContext() : 
				base(global::ptudql_project.Properties.Settings.Default.QLTNConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLTNDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLTNDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLTNDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLTNDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BoDeThi> BoDeThis
		{
			get
			{
				return this.GetTable<BoDeThi>();
			}
		}
		
		public System.Data.Linq.Table<CauHoi> CauHois
		{
			get
			{
				return this.GetTable<CauHoi>();
			}
		}
		
		public System.Data.Linq.Table<DanhSachThi> DanhSachThis
		{
			get
			{
				return this.GetTable<DanhSachThi>();
			}
		}
		
		public System.Data.Linq.Table<DeThi> DeThis
		{
			get
			{
				return this.GetTable<DeThi>();
			}
		}
		
		public System.Data.Linq.Table<HocSinh> HocSinhs
		{
			get
			{
				return this.GetTable<HocSinh>();
			}
		}
		
		public System.Data.Linq.Table<KyThi_DeThi> KyThi_DeThis
		{
			get
			{
				return this.GetTable<KyThi_DeThi>();
			}
		}
		
		public System.Data.Linq.Table<GiaoVien> GiaoViens
		{
			get
			{
				return this.GetTable<GiaoVien>();
			}
		}
		
		public System.Data.Linq.Table<KyThi> KyThis
		{
			get
			{
				return this.GetTable<KyThi>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BoDeThi")]
	public partial class BoDeThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdDe;
		
		private int _IdCauHoi;
		
		private EntityRef<CauHoi> _CauHoi;
		
		private EntityRef<DeThi> _DeThi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDeChanging(string value);
    partial void OnIdDeChanged();
    partial void OnIdCauHoiChanging(int value);
    partial void OnIdCauHoiChanged();
    #endregion
		
		public BoDeThi()
		{
			this._CauHoi = default(EntityRef<CauHoi>);
			this._DeThi = default(EntityRef<DeThi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDe", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdDe
		{
			get
			{
				return this._IdDe;
			}
			set
			{
				if ((this._IdDe != value))
				{
					if (this._DeThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDeChanging(value);
					this.SendPropertyChanging();
					this._IdDe = value;
					this.SendPropertyChanged("IdDe");
					this.OnIdDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCauHoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdCauHoi
		{
			get
			{
				return this._IdCauHoi;
			}
			set
			{
				if ((this._IdCauHoi != value))
				{
					if (this._CauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCauHoiChanging(value);
					this.SendPropertyChanging();
					this._IdCauHoi = value;
					this.SendPropertyChanged("IdCauHoi");
					this.OnIdCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoi_BoDeThi", Storage="_CauHoi", ThisKey="IdCauHoi", OtherKey="IdCauHoi", IsForeignKey=true)]
		public CauHoi CauHoi
		{
			get
			{
				return this._CauHoi.Entity;
			}
			set
			{
				CauHoi previousValue = this._CauHoi.Entity;
				if (((previousValue != value) 
							|| (this._CauHoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHoi.Entity = null;
						previousValue.BoDeThis.Remove(this);
					}
					this._CauHoi.Entity = value;
					if ((value != null))
					{
						value.BoDeThis.Add(this);
						this._IdCauHoi = value.IdCauHoi;
					}
					else
					{
						this._IdCauHoi = default(int);
					}
					this.SendPropertyChanged("CauHoi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_BoDeThi", Storage="_DeThi", ThisKey="IdDe", OtherKey="IdDe", IsForeignKey=true)]
		public DeThi DeThi
		{
			get
			{
				return this._DeThi.Entity;
			}
			set
			{
				DeThi previousValue = this._DeThi.Entity;
				if (((previousValue != value) 
							|| (this._DeThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeThi.Entity = null;
						previousValue.BoDeThis.Remove(this);
					}
					this._DeThi.Entity = value;
					if ((value != null))
					{
						value.BoDeThis.Add(this);
						this._IdDe = value.IdDe;
					}
					else
					{
						this._IdDe = default(string);
					}
					this.SendPropertyChanged("DeThi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CauHoi")]
	public partial class CauHoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCauHoi;
		
		private string _NoiDung;
		
		private string _CauA;
		
		private string _CauB;
		
		private string _CauC;
		
		private string _CauD;
		
		private System.Nullable<char> _CauTLDung;
		
		private System.Nullable<int> _LoaiCauHoi;
		
		private EntitySet<BoDeThi> _BoDeThis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCauHoiChanging(int value);
    partial void OnIdCauHoiChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnCauAChanging(string value);
    partial void OnCauAChanged();
    partial void OnCauBChanging(string value);
    partial void OnCauBChanged();
    partial void OnCauCChanging(string value);
    partial void OnCauCChanged();
    partial void OnCauDChanging(string value);
    partial void OnCauDChanged();
    partial void OnCauTLDungChanging(System.Nullable<char> value);
    partial void OnCauTLDungChanged();
    partial void OnLoaiCauHoiChanging(System.Nullable<int> value);
    partial void OnLoaiCauHoiChanged();
    #endregion
		
		public CauHoi()
		{
			this._BoDeThis = new EntitySet<BoDeThi>(new Action<BoDeThi>(this.attach_BoDeThis), new Action<BoDeThi>(this.detach_BoDeThis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCauHoi", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCauHoi
		{
			get
			{
				return this._IdCauHoi;
			}
			set
			{
				if ((this._IdCauHoi != value))
				{
					this.OnIdCauHoiChanging(value);
					this.SendPropertyChanging();
					this._IdCauHoi = value;
					this.SendPropertyChanged("IdCauHoi");
					this.OnIdCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauA", DbType="NVarChar(MAX)")]
		public string CauA
		{
			get
			{
				return this._CauA;
			}
			set
			{
				if ((this._CauA != value))
				{
					this.OnCauAChanging(value);
					this.SendPropertyChanging();
					this._CauA = value;
					this.SendPropertyChanged("CauA");
					this.OnCauAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauB", DbType="NVarChar(MAX)")]
		public string CauB
		{
			get
			{
				return this._CauB;
			}
			set
			{
				if ((this._CauB != value))
				{
					this.OnCauBChanging(value);
					this.SendPropertyChanging();
					this._CauB = value;
					this.SendPropertyChanged("CauB");
					this.OnCauBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauC", DbType="NVarChar(MAX)")]
		public string CauC
		{
			get
			{
				return this._CauC;
			}
			set
			{
				if ((this._CauC != value))
				{
					this.OnCauCChanging(value);
					this.SendPropertyChanging();
					this._CauC = value;
					this.SendPropertyChanged("CauC");
					this.OnCauCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauD", DbType="NVarChar(MAX)")]
		public string CauD
		{
			get
			{
				return this._CauD;
			}
			set
			{
				if ((this._CauD != value))
				{
					this.OnCauDChanging(value);
					this.SendPropertyChanging();
					this._CauD = value;
					this.SendPropertyChanged("CauD");
					this.OnCauDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauTLDung", DbType="Char(1)")]
		public System.Nullable<char> CauTLDung
		{
			get
			{
				return this._CauTLDung;
			}
			set
			{
				if ((this._CauTLDung != value))
				{
					this.OnCauTLDungChanging(value);
					this.SendPropertyChanging();
					this._CauTLDung = value;
					this.SendPropertyChanged("CauTLDung");
					this.OnCauTLDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiCauHoi", DbType="Int")]
		public System.Nullable<int> LoaiCauHoi
		{
			get
			{
				return this._LoaiCauHoi;
			}
			set
			{
				if ((this._LoaiCauHoi != value))
				{
					this.OnLoaiCauHoiChanging(value);
					this.SendPropertyChanging();
					this._LoaiCauHoi = value;
					this.SendPropertyChanged("LoaiCauHoi");
					this.OnLoaiCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoi_BoDeThi", Storage="_BoDeThis", ThisKey="IdCauHoi", OtherKey="IdCauHoi")]
		public EntitySet<BoDeThi> BoDeThis
		{
			get
			{
				return this._BoDeThis;
			}
			set
			{
				this._BoDeThis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BoDeThis(BoDeThi entity)
		{
			this.SendPropertyChanging();
			entity.CauHoi = this;
		}
		
		private void detach_BoDeThis(BoDeThi entity)
		{
			this.SendPropertyChanging();
			entity.CauHoi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhSachThi")]
	public partial class DanhSachThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TKHocSinh;
		
		private string _IdDe;
		
		private string _IdKyThi;
		
		private System.Nullable<double> _Diem;
		
		private EntityRef<DeThi> _DeThi;
		
		private EntityRef<HocSinh> _HocSinh;
		
		private EntityRef<KyThi> _KyThi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTKHocSinhChanging(string value);
    partial void OnTKHocSinhChanged();
    partial void OnIdDeChanging(string value);
    partial void OnIdDeChanged();
    partial void OnIdKyThiChanging(string value);
    partial void OnIdKyThiChanged();
    partial void OnDiemChanging(System.Nullable<double> value);
    partial void OnDiemChanged();
    #endregion
		
		public DanhSachThi()
		{
			this._DeThi = default(EntityRef<DeThi>);
			this._HocSinh = default(EntityRef<HocSinh>);
			this._KyThi = default(EntityRef<KyThi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TKHocSinh", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TKHocSinh
		{
			get
			{
				return this._TKHocSinh;
			}
			set
			{
				if ((this._TKHocSinh != value))
				{
					if (this._HocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTKHocSinhChanging(value);
					this.SendPropertyChanging();
					this._TKHocSinh = value;
					this.SendPropertyChanged("TKHocSinh");
					this.OnTKHocSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDe", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdDe
		{
			get
			{
				return this._IdDe;
			}
			set
			{
				if ((this._IdDe != value))
				{
					if (this._DeThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDeChanging(value);
					this.SendPropertyChanging();
					this._IdDe = value;
					this.SendPropertyChanged("IdDe");
					this.OnIdDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKyThi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdKyThi
		{
			get
			{
				return this._IdKyThi;
			}
			set
			{
				if ((this._IdKyThi != value))
				{
					if (this._KyThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdKyThiChanging(value);
					this.SendPropertyChanging();
					this._IdKyThi = value;
					this.SendPropertyChanged("IdKyThi");
					this.OnIdKyThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diem", DbType="Float")]
		public System.Nullable<double> Diem
		{
			get
			{
				return this._Diem;
			}
			set
			{
				if ((this._Diem != value))
				{
					this.OnDiemChanging(value);
					this.SendPropertyChanging();
					this._Diem = value;
					this.SendPropertyChanged("Diem");
					this.OnDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_DanhSachThi", Storage="_DeThi", ThisKey="IdDe", OtherKey="IdDe", IsForeignKey=true)]
		public DeThi DeThi
		{
			get
			{
				return this._DeThi.Entity;
			}
			set
			{
				DeThi previousValue = this._DeThi.Entity;
				if (((previousValue != value) 
							|| (this._DeThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeThi.Entity = null;
						previousValue.DanhSachThis.Remove(this);
					}
					this._DeThi.Entity = value;
					if ((value != null))
					{
						value.DanhSachThis.Add(this);
						this._IdDe = value.IdDe;
					}
					else
					{
						this._IdDe = default(string);
					}
					this.SendPropertyChanged("DeThi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_DanhSachThi", Storage="_HocSinh", ThisKey="TKHocSinh", OtherKey="TenTK", IsForeignKey=true)]
		public HocSinh HocSinh
		{
			get
			{
				return this._HocSinh.Entity;
			}
			set
			{
				HocSinh previousValue = this._HocSinh.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh.Entity = null;
						previousValue.DanhSachThis.Remove(this);
					}
					this._HocSinh.Entity = value;
					if ((value != null))
					{
						value.DanhSachThis.Add(this);
						this._TKHocSinh = value.TenTK;
					}
					else
					{
						this._TKHocSinh = default(string);
					}
					this.SendPropertyChanged("HocSinh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KyThi_DanhSachThi", Storage="_KyThi", ThisKey="IdKyThi", OtherKey="IDKyThi", IsForeignKey=true)]
		public KyThi KyThi
		{
			get
			{
				return this._KyThi.Entity;
			}
			set
			{
				KyThi previousValue = this._KyThi.Entity;
				if (((previousValue != value) 
							|| (this._KyThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KyThi.Entity = null;
						previousValue.DanhSachThis.Remove(this);
					}
					this._KyThi.Entity = value;
					if ((value != null))
					{
						value.DanhSachThis.Add(this);
						this._IdKyThi = value.IDKyThi;
					}
					else
					{
						this._IdKyThi = default(string);
					}
					this.SendPropertyChanged("KyThi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeThi")]
	public partial class DeThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdDe;
		
		private string _GVRaDe;
		
		private EntitySet<BoDeThi> _BoDeThis;
		
		private EntitySet<DanhSachThi> _DanhSachThis;
		
		private EntitySet<KyThi_DeThi> _KyThi_DeThis;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDeChanging(string value);
    partial void OnIdDeChanged();
    partial void OnGVRaDeChanging(string value);
    partial void OnGVRaDeChanged();
    #endregion
		
		public DeThi()
		{
			this._BoDeThis = new EntitySet<BoDeThi>(new Action<BoDeThi>(this.attach_BoDeThis), new Action<BoDeThi>(this.detach_BoDeThis));
			this._DanhSachThis = new EntitySet<DanhSachThi>(new Action<DanhSachThi>(this.attach_DanhSachThis), new Action<DanhSachThi>(this.detach_DanhSachThis));
			this._KyThi_DeThis = new EntitySet<KyThi_DeThi>(new Action<KyThi_DeThi>(this.attach_KyThi_DeThis), new Action<KyThi_DeThi>(this.detach_KyThi_DeThis));
			this._GiaoVien = default(EntityRef<GiaoVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDe", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdDe
		{
			get
			{
				return this._IdDe;
			}
			set
			{
				if ((this._IdDe != value))
				{
					this.OnIdDeChanging(value);
					this.SendPropertyChanging();
					this._IdDe = value;
					this.SendPropertyChanged("IdDe");
					this.OnIdDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GVRaDe", DbType="VarChar(20)")]
		public string GVRaDe
		{
			get
			{
				return this._GVRaDe;
			}
			set
			{
				if ((this._GVRaDe != value))
				{
					if (this._GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGVRaDeChanging(value);
					this.SendPropertyChanging();
					this._GVRaDe = value;
					this.SendPropertyChanged("GVRaDe");
					this.OnGVRaDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_BoDeThi", Storage="_BoDeThis", ThisKey="IdDe", OtherKey="IdDe")]
		public EntitySet<BoDeThi> BoDeThis
		{
			get
			{
				return this._BoDeThis;
			}
			set
			{
				this._BoDeThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_DanhSachThi", Storage="_DanhSachThis", ThisKey="IdDe", OtherKey="IdDe")]
		public EntitySet<DanhSachThi> DanhSachThis
		{
			get
			{
				return this._DanhSachThis;
			}
			set
			{
				this._DanhSachThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_KyThi_DeThi", Storage="_KyThi_DeThis", ThisKey="IdDe", OtherKey="IdDe")]
		public EntitySet<KyThi_DeThi> KyThi_DeThis
		{
			get
			{
				return this._KyThi_DeThis;
			}
			set
			{
				this._KyThi_DeThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_DeThi", Storage="_GiaoVien", ThisKey="GVRaDe", OtherKey="TenTK", IsForeignKey=true)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.DeThis.Remove(this);
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.DeThis.Add(this);
						this._GVRaDe = value.TenTK;
					}
					else
					{
						this._GVRaDe = default(string);
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BoDeThis(BoDeThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = this;
		}
		
		private void detach_BoDeThis(BoDeThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = null;
		}
		
		private void attach_DanhSachThis(DanhSachThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = this;
		}
		
		private void detach_DanhSachThis(DanhSachThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = null;
		}
		
		private void attach_KyThi_DeThis(KyThi_DeThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = this;
		}
		
		private void detach_KyThi_DeThis(KyThi_DeThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocSinh")]
	public partial class HocSinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenTK;
		
		private string _Khoi;
		
		private string _Lop;
		
		private string _HoTen;
		
		private EntitySet<DanhSachThi> _DanhSachThis;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenTKChanging(string value);
    partial void OnTenTKChanged();
    partial void OnKhoiChanging(string value);
    partial void OnKhoiChanged();
    partial void OnLopChanging(string value);
    partial void OnLopChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    #endregion
		
		public HocSinh()
		{
			this._DanhSachThis = new EntitySet<DanhSachThi>(new Action<DanhSachThi>(this.attach_DanhSachThis), new Action<DanhSachThi>(this.detach_DanhSachThis));
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTK", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenTK
		{
			get
			{
				return this._TenTK;
			}
			set
			{
				if ((this._TenTK != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTenTKChanging(value);
					this.SendPropertyChanging();
					this._TenTK = value;
					this.SendPropertyChanged("TenTK");
					this.OnTenTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoi", DbType="VarChar(10)")]
		public string Khoi
		{
			get
			{
				return this._Khoi;
			}
			set
			{
				if ((this._Khoi != value))
				{
					this.OnKhoiChanging(value);
					this.SendPropertyChanging();
					this._Khoi = value;
					this.SendPropertyChanged("Khoi");
					this.OnKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lop", DbType="VarChar(10)")]
		public string Lop
		{
			get
			{
				return this._Lop;
			}
			set
			{
				if ((this._Lop != value))
				{
					this.OnLopChanging(value);
					this.SendPropertyChanging();
					this._Lop = value;
					this.SendPropertyChanged("Lop");
					this.OnLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_DanhSachThi", Storage="_DanhSachThis", ThisKey="TenTK", OtherKey="TKHocSinh")]
		public EntitySet<DanhSachThi> DanhSachThis
		{
			get
			{
				return this._DanhSachThis;
			}
			set
			{
				this._DanhSachThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_HocSinh", Storage="_TaiKhoan", ThisKey="TenTK", OtherKey="TenDangNhap", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.HocSinh = null;
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.HocSinh = this;
						this._TenTK = value.TenDangNhap;
					}
					else
					{
						this._TenTK = default(string);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhSachThis(DanhSachThi entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = this;
		}
		
		private void detach_DanhSachThis(DanhSachThi entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KyThi_DeThi")]
	public partial class KyThi_DeThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdDe;
		
		private string _IdKyThi;
		
		private EntityRef<DeThi> _DeThi;
		
		private EntityRef<KyThi> _KyThi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDeChanging(string value);
    partial void OnIdDeChanged();
    partial void OnIdKyThiChanging(string value);
    partial void OnIdKyThiChanged();
    #endregion
		
		public KyThi_DeThi()
		{
			this._DeThi = default(EntityRef<DeThi>);
			this._KyThi = default(EntityRef<KyThi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDe", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdDe
		{
			get
			{
				return this._IdDe;
			}
			set
			{
				if ((this._IdDe != value))
				{
					if (this._DeThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDeChanging(value);
					this.SendPropertyChanging();
					this._IdDe = value;
					this.SendPropertyChanged("IdDe");
					this.OnIdDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKyThi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdKyThi
		{
			get
			{
				return this._IdKyThi;
			}
			set
			{
				if ((this._IdKyThi != value))
				{
					if (this._KyThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdKyThiChanging(value);
					this.SendPropertyChanging();
					this._IdKyThi = value;
					this.SendPropertyChanged("IdKyThi");
					this.OnIdKyThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_KyThi_DeThi", Storage="_DeThi", ThisKey="IdDe", OtherKey="IdDe", IsForeignKey=true)]
		public DeThi DeThi
		{
			get
			{
				return this._DeThi.Entity;
			}
			set
			{
				DeThi previousValue = this._DeThi.Entity;
				if (((previousValue != value) 
							|| (this._DeThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeThi.Entity = null;
						previousValue.KyThi_DeThis.Remove(this);
					}
					this._DeThi.Entity = value;
					if ((value != null))
					{
						value.KyThi_DeThis.Add(this);
						this._IdDe = value.IdDe;
					}
					else
					{
						this._IdDe = default(string);
					}
					this.SendPropertyChanged("DeThi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KyThi_KyThi_DeThi", Storage="_KyThi", ThisKey="IdKyThi", OtherKey="IDKyThi", IsForeignKey=true)]
		public KyThi KyThi
		{
			get
			{
				return this._KyThi.Entity;
			}
			set
			{
				KyThi previousValue = this._KyThi.Entity;
				if (((previousValue != value) 
							|| (this._KyThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KyThi.Entity = null;
						previousValue.KyThi_DeThis.Remove(this);
					}
					this._KyThi.Entity = value;
					if ((value != null))
					{
						value.KyThi_DeThis.Add(this);
						this._IdKyThi = value.IDKyThi;
					}
					else
					{
						this._IdKyThi = default(string);
					}
					this.SendPropertyChanged("KyThi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiaoVien")]
	public partial class GiaoVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenTK;
		
		private string _Ten;
		
		private EntitySet<DeThi> _DeThis;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenTKChanging(string value);
    partial void OnTenTKChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    #endregion
		
		public GiaoVien()
		{
			this._DeThis = new EntitySet<DeThi>(new Action<DeThi>(this.attach_DeThis), new Action<DeThi>(this.detach_DeThis));
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTK", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenTK
		{
			get
			{
				return this._TenTK;
			}
			set
			{
				if ((this._TenTK != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTenTKChanging(value);
					this.SendPropertyChanging();
					this._TenTK = value;
					this.SendPropertyChanged("TenTK");
					this.OnTenTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(50)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_DeThi", Storage="_DeThis", ThisKey="TenTK", OtherKey="GVRaDe")]
		public EntitySet<DeThi> DeThis
		{
			get
			{
				return this._DeThis;
			}
			set
			{
				this._DeThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_GiaoVien", Storage="_TaiKhoan", ThisKey="TenTK", OtherKey="TenDangNhap", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.GiaoVien = null;
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.GiaoVien = this;
						this._TenTK = value.TenDangNhap;
					}
					else
					{
						this._TenTK = default(string);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DeThis(DeThi entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = this;
		}
		
		private void detach_DeThis(DeThi entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KyThi")]
	public partial class KyThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDKyThi;
		
		private string _TenKyThi;
		
		private System.Nullable<int> _SLThamGia;
		
		private System.Nullable<int> _LoaiKyThi;
		
		private EntitySet<DanhSachThi> _DanhSachThis;
		
		private EntitySet<KyThi_DeThi> _KyThi_DeThis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDKyThiChanging(string value);
    partial void OnIDKyThiChanged();
    partial void OnTenKyThiChanging(string value);
    partial void OnTenKyThiChanged();
    partial void OnSLThamGiaChanging(System.Nullable<int> value);
    partial void OnSLThamGiaChanged();
    partial void OnLoaiKyThiChanging(System.Nullable<int> value);
    partial void OnLoaiKyThiChanged();
    #endregion
		
		public KyThi()
		{
			this._DanhSachThis = new EntitySet<DanhSachThi>(new Action<DanhSachThi>(this.attach_DanhSachThis), new Action<DanhSachThi>(this.detach_DanhSachThis));
			this._KyThi_DeThis = new EntitySet<KyThi_DeThi>(new Action<KyThi_DeThi>(this.attach_KyThi_DeThis), new Action<KyThi_DeThi>(this.detach_KyThi_DeThis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKyThi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDKyThi
		{
			get
			{
				return this._IDKyThi;
			}
			set
			{
				if ((this._IDKyThi != value))
				{
					this.OnIDKyThiChanging(value);
					this.SendPropertyChanging();
					this._IDKyThi = value;
					this.SendPropertyChanged("IDKyThi");
					this.OnIDKyThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKyThi", DbType="NVarChar(50)")]
		public string TenKyThi
		{
			get
			{
				return this._TenKyThi;
			}
			set
			{
				if ((this._TenKyThi != value))
				{
					this.OnTenKyThiChanging(value);
					this.SendPropertyChanging();
					this._TenKyThi = value;
					this.SendPropertyChanged("TenKyThi");
					this.OnTenKyThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLThamGia", DbType="Int")]
		public System.Nullable<int> SLThamGia
		{
			get
			{
				return this._SLThamGia;
			}
			set
			{
				if ((this._SLThamGia != value))
				{
					this.OnSLThamGiaChanging(value);
					this.SendPropertyChanging();
					this._SLThamGia = value;
					this.SendPropertyChanged("SLThamGia");
					this.OnSLThamGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiKyThi", DbType="Int")]
		public System.Nullable<int> LoaiKyThi
		{
			get
			{
				return this._LoaiKyThi;
			}
			set
			{
				if ((this._LoaiKyThi != value))
				{
					this.OnLoaiKyThiChanging(value);
					this.SendPropertyChanging();
					this._LoaiKyThi = value;
					this.SendPropertyChanged("LoaiKyThi");
					this.OnLoaiKyThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KyThi_DanhSachThi", Storage="_DanhSachThis", ThisKey="IDKyThi", OtherKey="IdKyThi")]
		public EntitySet<DanhSachThi> DanhSachThis
		{
			get
			{
				return this._DanhSachThis;
			}
			set
			{
				this._DanhSachThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KyThi_KyThi_DeThi", Storage="_KyThi_DeThis", ThisKey="IDKyThi", OtherKey="IdKyThi")]
		public EntitySet<KyThi_DeThi> KyThi_DeThis
		{
			get
			{
				return this._KyThi_DeThis;
			}
			set
			{
				this._KyThi_DeThis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhSachThis(DanhSachThi entity)
		{
			this.SendPropertyChanging();
			entity.KyThi = this;
		}
		
		private void detach_DanhSachThis(DanhSachThi entity)
		{
			this.SendPropertyChanging();
			entity.KyThi = null;
		}
		
		private void attach_KyThi_DeThis(KyThi_DeThi entity)
		{
			this.SendPropertyChanging();
			entity.KyThi = this;
		}
		
		private void detach_KyThi_DeThis(KyThi_DeThi entity)
		{
			this.SendPropertyChanging();
			entity.KyThi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private System.Nullable<int> _LoaiTK;
		
		private EntityRef<HocSinh> _HocSinh;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnLoaiTKChanging(System.Nullable<int> value);
    partial void OnLoaiTKChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._HocSinh = default(EntityRef<HocSinh>);
			this._GiaoVien = default(EntityRef<GiaoVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(20)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiTK", DbType="Int")]
		public System.Nullable<int> LoaiTK
		{
			get
			{
				return this._LoaiTK;
			}
			set
			{
				if ((this._LoaiTK != value))
				{
					this.OnLoaiTKChanging(value);
					this.SendPropertyChanging();
					this._LoaiTK = value;
					this.SendPropertyChanged("LoaiTK");
					this.OnLoaiTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_HocSinh", Storage="_HocSinh", ThisKey="TenDangNhap", OtherKey="TenTK", IsUnique=true, IsForeignKey=false)]
		public HocSinh HocSinh
		{
			get
			{
				return this._HocSinh.Entity;
			}
			set
			{
				HocSinh previousValue = this._HocSinh.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh.Entity = null;
						previousValue.TaiKhoan = null;
					}
					this._HocSinh.Entity = value;
					if ((value != null))
					{
						value.TaiKhoan = this;
					}
					this.SendPropertyChanged("HocSinh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_GiaoVien", Storage="_GiaoVien", ThisKey="TenDangNhap", OtherKey="TenTK", IsUnique=true, IsForeignKey=false)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.TaiKhoan = null;
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.TaiKhoan = this;
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
