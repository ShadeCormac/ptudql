<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAASwAAAAoCAYAAABEm8fXAAAABGdBTUEAALGPC/xhBQAAA/hJREFUeF7t
        3U9vG0UYBnB/D5DoBSSQ4MCXQUIglSPZnfd513/qtR1D6lwQEldKlVsTSNI7FxTUDwBSaA5AaYGkCIWS
        Jk1qO7FxpWXGHhpFHbWN6ziL9DzS7xBrdjenR5717kxh3KjqBSCtiMx/LWj+pJreA0p9+3lGROSMOiG9
        5zrCdYVqrVwqlV7xNXL2ASoptHYXmO0aXB/EejOL8Iv1VzaDjjUgIvI6w25wHWGwkRm9PnDdYTtkS6RS
        9rUy+ahWy0DyKMZaJ8IfgX+MiOj5uA6J5du2ajKw3VL0NfPiiXTubdXmpsFKZwa94MWJiMZzZL95rbSB
        5m/Ax2/52hkvIrUPoK39GewHLkRENCkPMmDuQLX2vq+f0wVJqy5Y2A2fnIho8gRXd4H5qq+h5wvw2ScG
        S3YKGD4pEdFZsd1jp4ifXvZ19PSophcNFvZCJyIimgbBlb+B6nu+lsJJkuTN0T2r8EmIiKYFOrevqq/7
        enoygvqvvMFORPmwZ0urcdvX08molosGKwfhA4mIps/gqwORCnxNHcc9FMrnrIgoXw4zoPiPr6lRkDRm
        DW4chg8gIjo/MdaORKqXfF3ZwtLaXb5uQ0R5FGErU61vDstKVS+ozvKZKyLKLUGta4x5uQCUEoPVfmgQ
        EVEeGHzZATBTEKkvuyViQoOIiPIgxnom2lhy96823Fo1oUFERHkQ4ZabFt60U8Lq9mjxvfBAIqLzFmE7
        E6lu28Iq9rhSKBHlW8c9j9VjYRHR/8DjwuKUkIjy7XhKyJvuRJRzsd5yvxL+UBCZXY2xERxERJQHsa7b
        b1jNZbdKgxqs9kKDiIjyQHS5D5TjgtvUENrgqzlElFvQ2mGSJC8N3ye0f2zx5WciyqMImxlQ/31YVi5A
        LY31xiA0mIjoPEWy9ghIK76uRlEt2sI6Ch5ARHQ+uplqqe9r6jhAJTFY6YYPIiKaPoPlrmrF+Jo6Gbdd
        tNuBNXQgEdF03c+Aj+74enoyxpTeAC63wwcTEU0PdK4TRcXXfD2FY7R5UXD1QegERETTYPTKvp3xPX0j
        1f+CpJUaLPKbFhFNncG1DjB/8lfBZwVopYIvdkInJCI6C4LP74u0yr6GTheR8rtuu2i3A2vo5EREk7Gb
        QZsPgco7vn7Gi9vbHlr/2cjSntvUMHwxIqJxdO0UcHEPaPwoIq/62nnxqJaMarEfyVrX7RMWvjgR0bO5
        121ifNO2ndKzIl8zk4+dJhaB6h0gfSi4thPL+nCBeLfAFlcuJaKTOsNucOtZRcOdbxZ3bHe0oeltkWLR
        18rZx21q6PYJU60sCKrfA5f+dEuY2ilkRkTkuE5w3aBa/U6ktGA/+/DxqgunTqHwL533cEyfxzl4AAAA
        AElFTkSuQmCC
</value>
  </data>
</root>